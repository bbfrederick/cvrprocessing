#!/usr/bin/env python
from __future__ import print_function, division

import glob
import sys
import os
from os.path import join as pjoin
import subprocess
import re
import shutil
from tempfile import mkstemp



def usage():
    print("")
    print("step30_preprocbold - run FSL preprocessing on the datasets")
    print("")
    print("    usage:  step30_preprocbold")
    print("")


def sed(pattern, replace, source, dest=None, count=0):
    """Reads a source file and writes the destination file.

    In each line, replaces pattern with replace.

    Args:
        pattern (str): pattern to match (can be re.pattern)
        replace (str): replacement str
        source  (str): input filename
        count (int): number of occurrences to replace
        dest (str):   destination filename, if not given, source will be over written.        
    """

    fin = open(source, 'r')
    num_replaced = count

    if dest:
        fout = open(dest, 'w')
    else:
        fd, name = mkstemp()
        fout = open(name, 'w')

    for line in fin:
        out = re.sub(pattern, replace, line)
        fout.write(out)

        if out != line:
            num_replaced += 1
        if count and num_replaced > count:
            break
    try:
        fout.writelines(fin.readlines())
    except Exception as E:
        raise E

    fin.close()
    fout.close()

    if not dest:
        shutil.move(name, source) 


def main():
    fake = True

    args = sys.argv[1:]
    if len(args) != 0:
        print('step30_preprocbold - run FSL preprocessing on all datasets')
        usage()
        exit()

    # determine which files are there to be analyzed
    rootdir = os.path.abspath('..')
    #print(rootdir)
    funcnames = sorted(glob.glob(pjoin(rootdir, 'sub-*', 'proc', '*.feat', 'filtered_func_data.nii.gz')))

    # loop over all resting state files
    for thefmriscan in funcnames:
        # get the important components of the path
        funcdir, fmrifile = os.path.split(thefmriscan)
        targetdir = os.path.join(funcdir, 'ICA_AROMA')

        # remove any previous run directory
        if not fake:
            shutil.rmtree(targetdir)

        # and launch the processing
        aromacmd = ['fsl_sub', os.path.join('/cm/shared/ICA-AROMA', 'ICA_AROMA.py'), '-f', funcdir, '-o', targetdir]
        if fake:
            print(' '.join(aromacmd))
        else:
            subprocess.call(aromacmd)
        

if __name__ == "__main__":
    main()
